package cn.edu.buu.uoes.dao;

import cn.edu.buu.uoes.pojo.Teacher;
import java.util.List;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

public interface TeacherDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbg.generated Mon Oct 05 16:05:59 CST 2020
     */
    @Delete({
        "delete from teacher",
        "where tno = #{tno,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer tno);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbg.generated Mon Oct 05 16:05:59 CST 2020
     */
    @Insert({
        "insert into teacher (tno, teacher_name, ",
        "sex, teacher_tel)",
        "values (#{tno,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, ",
        "#{sex,jdbcType=VARCHAR}, #{teacherTel,jdbcType=VARCHAR})"
    })
    @Options(useGeneratedKeys = true, keyColumn = "tno", keyProperty = "tno")
    int insert(Teacher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbg.generated Mon Oct 05 16:05:59 CST 2020
     */
    @Select({
        "select",
        "tno, teacher_name, sex, teacher_tel",
        "from teacher",
        "where tno = #{tno,jdbcType=INTEGER}"
    })
    @ConstructorArgs({
        @Arg(column="tno", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="teacher_name", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="sex", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="teacher_tel", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    Teacher selectByPrimaryKey(Integer tno);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbg.generated Mon Oct 05 16:05:59 CST 2020
     */
    @Select({
        "select",
        "tno, teacher_name, sex, teacher_tel",
        "from teacher"
    })
    @ConstructorArgs({
        @Arg(column="tno", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="teacher_name", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="sex", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="teacher_tel", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    List<Teacher> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbg.generated Mon Oct 05 16:05:59 CST 2020
     */
    @Update({
        "update teacher",
        "set teacher_name = #{teacherName,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=VARCHAR},",
          "teacher_tel = #{teacherTel,jdbcType=VARCHAR}",
        "where tno = #{tno,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Teacher record);

    @Select({
            "select",
            "tno, teacher_name, sex, teacher_tel",
            "from teacher",
            "where teacher_name like CONCAT('%', #{teacherName, jdbcType=VARCHAR}, '%')"
    })
    @ConstructorArgs({
            @Arg(column="tno", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
            @Arg(column="teacher_name", javaType=String.class, jdbcType=JdbcType.VARCHAR),
            @Arg(column="sex", javaType=String.class, jdbcType=JdbcType.VARCHAR),
            @Arg(column="teacher_tel", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    List<Teacher> selectByName(String teacherName);
}